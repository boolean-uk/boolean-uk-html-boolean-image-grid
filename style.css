* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
header {
  display: grid;
  grid-template: "logo nav";
  grid-template-columns: 1fr auto;
  grid-auto-flow: column;
  background-color: rgb(5, 9, 62);
  width: 100%;
  position: fixed;
}
.logo {
  grid-area: logo;
}
.logo > img {
  width: 5rem;
  object-fit: cover;
}
img {
  width: 8rem;
  object-fit: cover;
}

main {
  display: grid;
  grid-template: ". main .";
  grid-template-columns: 1fr auto 1fr; /*keep main in the middle (obtain responsiveness)*/
  grid-auto-flow: column;
  padding: 5rem 0;
}
.main {
  grid-area: main;
  display: grid;
  grid-template-columns: repeat(4, minmax(200px, 1fr));
  grid-template-rows: auto;
  grid-auto-flow: row;
  padding: 2rem;
  gap: 2rem;
  height: fit-content;
}
.container {
  border: 0.2rem solid black;
  border-radius: 0.5rem;
  display: grid;
  grid-template-rows: repeat(2, minmax(300px, 1fr));
  gap: 0.2rem;
  justify-content: center;
}
.imageCover {
  position: relative;
  border: 0.2rem dashed rgb(191, 107, 107);
  /* object-fit: cover; */
  /* overflow: hidden; */
}

.imageCover .mainPhoto {
  width: 100%;
  height: 100%;
}
.imageCover .smallPhoto {
  position: absolute;
  z-index: 2;
  top: 5%;
  left: 60%;
  width: 5rem;
  border-radius: 50%;
  /* z-index only affects elements that have a position value other than static (the default).
  Without any z-index value, elements stack in the order that they appear in the DOM 
  (the lowest one down at the same hierarchy level appears on top)
  the highest number on the top --default0
  */
}
.post {
  border: 0.2rem dashed rgb(219, 177, 94);
  display: grid;
  grid-template-rows: auto 1fr;
  /* height: fit-content; */
}
.smallLogos {
  display: grid;
  grid-template-columns: repeat(3, minmax(50px, 1fr));
  padding: 1rem;
  justify-self: right;
  gap: 0.5rem;
}

.smallLogos img {
  width: 3rem;
  border-radius: 50%;
}
.smallLogos a::visited {
  box-shadow: 10px 5px 5px rgb(130, 114, 114);
}
p {
  font-size: 1.5rem;
  padding: 1rem;
  justify-content: center;
}

iframe {
  width: 100rem;
  height: 40rem;
}

@media screen and (max-width: 768px) {

  .main {
    grid-template-columns: repeat(3, minmax(200px, 1fr));
  }
  .container {
    grid-template-rows: repeat(2, minmax(200px, 1fr));
  }
}
@media screen and (max-width: 480px) {
  .main {
    grid-template-columns: repeat(1, minmax(200px, 1fr));
  }
  .container {
    grid-template-rows: repeat(2, minmax(100px, 1fr));
  }
}
@media screen and (max-width: 250px) {
  .main {
    grid-template-columns: repeat(1, minmax(200px, 1fr));
  }
  .container {
    grid-template-rows: repeat(2, minmax(70px, 1fr));
  }
}
